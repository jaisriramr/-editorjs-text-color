{"code":"// CustomFontFamilyInlineTool.ts\n/**\n * Custom font family inline tool\n */\nclass CustomFontFamilyInlineTool {\n    /**\n     * Css class of custom font family inline tool\n     */\n    static CSS_CLASS = \"custom-font-family\";\n    /**\n     * Api  of custom font family inline tool\n     */\n    api;\n    state;\n    /**\n     * Font family of custom font family inline tool\n     */\n    font_Family = \"\";\n    /**\n     * Creates an instance of custom font family inline tool.\n     * @param { api, state }\n     */\n    constructor({ api, state }) {\n        this.api = api;\n        this.state = state;\n    }\n    /**\n     * Gets whether is inline\n     */\n    static get isInline() {\n        return true;\n    }\n    /**\n     * Gets title\n     */\n    static get title() {\n        return \"Font Family\";\n    }\n    /**\n     * Surrounds custom font family inline tool\n     * @param range\n     * @returns surround\n     */\n    surround() {\n        if (this.font_Family.length == 0) {\n            return;\n        }\n        document.execCommand(\"fontName\", false, this.font_Family);\n    }\n    /**\n     * Renders custom font family inline tool\n     * @returns render\n     */\n    render() {\n        const fontFamily = [\n            \"Arial\",\n            \"Lato\",\n            \"Helvatica\",\n            \"Roboto\",\n            \"Poppins\",\n            \"Times New Roman\",\n            \"Merriweather\",\n            \"Montserrat\",\n            \"Playfair Display\",\n            \"Raleway\",\n            \"Rubik\",\n        ];\n        const container = document.createElement(\"div\");\n        container.classList.add(\"editorjs-dropdown\");\n        const btn = document.createElement(\"button\");\n        btn.classList.add(\"editorjs-dropdown-btn\");\n        btn.classList.add(\"tools-truncate\");\n        const dropdownContent = document.createElement(\"div\");\n        dropdownContent.classList.add(\"editorjs-dropdown-content\");\n        fontFamily.map((family) => {\n            const FontFamily = document.createElement(\"p\");\n            FontFamily.classList.add(\"editorjs-fontfamily-p\");\n            FontFamily.innerText = family;\n            FontFamily.style.fontFamily = family;\n            FontFamily.onclick = (e) => {\n                this.font_Family = e.target.innerText;\n                btn.innerText = this.font_Family;\n                dropdownContent.classList.remove(\"editorjs-dropdown-content-active\");\n            };\n            dropdownContent.appendChild(FontFamily);\n        });\n        container.appendChild(btn);\n        container.appendChild(dropdownContent);\n        btn.innerHTML = \"Font family\";\n        btn.onclick = () => dropdownContent.classList.toggle(\"editorjs-dropdown-content-active\");\n        return container;\n    }\n    static get sanitize() {\n        return {\n            text: {\n                br: true,\n            },\n            span: {\n                style: true,\n                class: true,\n                id: true,\n                \"data-tooltip\": true,\n                \"data-user\": true,\n            },\n            mark: {\n                id: true,\n                class: true,\n            },\n            font: {\n                face: true,\n                color: true,\n                style: true,\n                class: true,\n                size: true,\n            },\n        };\n    }\n    /**\n     * Checks state\n     * @param selection\n     * @returns true if state\n     */\n    checkState() {\n        const mark = this.api.selection.findParentTag(\"mark\");\n        return (this.state = !!mark);\n    }\n}\nexport default CustomFontFamilyInlineTool;\n//# sourceMappingURL=index.js.map","references":["/home/textmercato/Desktop/opensource/editorjs-text-color/node_modules/@editorjs/editorjs/types/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/textmercato/Desktop/opensource/editorjs-text-color/dist/index.d.ts","writeByteOrderMark":false,"text":"import { API, InlineTool } from \"@editorjs/editorjs\";\n/**\n * Custom font family inline tool\n */\ndeclare class CustomFontFamilyInlineTool implements InlineTool {\n    /**\n     * Css class of custom font family inline tool\n     */\n    static readonly CSS_CLASS = \"custom-font-family\";\n    /**\n     * Api  of custom font family inline tool\n     */\n    readonly api: API;\n    state: boolean;\n    /**\n     * Font family of custom font family inline tool\n     */\n    private font_Family;\n    /**\n     * Creates an instance of custom font family inline tool.\n     * @param { api, state }\n     */\n    constructor({ api, state }: {\n        api: API;\n        state: false;\n    });\n    /**\n     * Gets whether is inline\n     */\n    static get isInline(): boolean;\n    /**\n     * Gets title\n     */\n    static get title(): string;\n    /**\n     * Surrounds custom font family inline tool\n     * @param range\n     * @returns surround\n     */\n    surround(): void;\n    /**\n     * Renders custom font family inline tool\n     * @returns render\n     */\n    render(): HTMLElement;\n    static get sanitize(): {\n        text: {\n            br: boolean;\n        };\n        span: {\n            style: boolean;\n            class: boolean;\n            id: boolean;\n            \"data-tooltip\": boolean;\n            \"data-user\": boolean;\n        };\n        mark: {\n            id: boolean;\n            class: boolean;\n        };\n        font: {\n            face: boolean;\n            color: boolean;\n            style: boolean;\n            class: boolean;\n            size: boolean;\n        };\n    };\n    /**\n     * Checks state\n     * @param selection\n     * @returns true if state\n     */\n    checkState(): boolean;\n}\nexport default CustomFontFamilyInlineTool;\n"}}
